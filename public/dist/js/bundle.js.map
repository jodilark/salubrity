{"version":3,"sources":["app.js","controllers/homeCtrl.js","controllers/landingPageHCP.js","controllers/landingPageUser.js","controllers/mainCtrl.js","controllers/notificationPrimary.js","controllers/notificationSecondary.js","controllers/settings.js","controllers/testCreate.js","controllers/testDetails.js","controllers/testManage.js","controllers/userCreate.js","controllers/userManage.js","controllers/userStats.js","directives/contactInfoDir.js","directives/errorDir.js","directives/headerDir.js","directives/progressBarDir.js","directives/successDir.js","directives/warningDir.js","services/deleteAllUsersSrv.js","services/dobSrv.js","services/getUserColumnsSrv.js","services/postUserInfoSrv.js","services/stateListSrv.js","services/userListSrv.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","otherwise","state","templateUrl","url","controller","$scope","controllerTest","stateListSrv","postUserInfoSrv","userListSrv","deleteAllUsersSrv","dobSrv","userCreateTest","stateListSrvTest","serviceTest","postUserInfoSrvTest","userServiceTest","deleteAllUsersServiceTest","dobServiceTest","states","getStatesList","then","response","stateName","data","clearForm","document","getElementById","reset","userInfo","submit","sName","stateObj","name","exists","getUsers","getUserList","users","i","length","email","first_name","firstName","state_id","id","submitUserInfo","alert","deleteUsers","deleteAllUsers","uiGridConstants","getUserColumnsSrv","userManageControllerTest","getUserColumnsSrvServiceTest","gridOptions","enableFiltering","columnDefs","onRegisterApi","gridApi","grid1Api","getCustomUserList","service","$http","method","httpResponse","console","log","JSON","stringify","monthsArr","monthObj","setDayOptions","month","year","dayOptions","leapYears","push","indexOf","yearsArr","makeYearArray","numberOfYears","d","Date","n","getFullYear","p","getColumnList","get"],"mappings":"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","file":"bundle.js","sourcesContent":["angular.module('app', ['ui.router', 'ui.grid'])\r\n    .config(function ($stateProvider, $urlRouterProvider) {\r\n        $urlRouterProvider.otherwise('/', \"\")\r\n        $stateProvider\r\n            .state('home', {\r\n                templateUrl: '../views/home.html',\r\n                url: '/'\r\n            })\r\n            .state('hcp_home', {\r\n                templateUrl: '../views/landing_page_hcp.html',\r\n                url: '/hcp_home',\r\n            })\r\n            .state('user_home', {\r\n                templateUrl: '../views/landing_page_user.html',\r\n                url: '/user_home',\r\n            })\r\n            .state('global_search', {\r\n                templateUrl: '../views/global_search_results.html',\r\n                url: '/global_search',\r\n            })\r\n            .state('settings', {\r\n                templateUrl: '../views/settings.html',\r\n                url: '/settings',\r\n            })\r\n            .state('test_create', {\r\n                templateUrl: '../views/test_create.html',\r\n                url: '/test_create',\r\n            })\r\n            .state('test_manage', {\r\n                templateUrl: '../views/test_manage.html',\r\n                url: '/test_manage',\r\n            })\r\n            .state('user_create', {\r\n                templateUrl: '../views/user_create.html',\r\n                url: '/user_create',\r\n                controller: 'userCreate'\r\n            })\r\n            .state('user_manage', {\r\n                templateUrl: '../views/user_manage.html',\r\n                url: '/user_manage',\r\n                controller: 'userManage'\r\n            })\r\n\r\n    })","","","","angular.module('app').controller('mainCtrl', function($scope){\r\n    // ...tests\r\n    $scope.controllerTest = 'Controller Engaged!!!'\r\n    \r\n})","","","","","","","angular.module('app').controller('userCreate', function ($scope, stateListSrv, postUserInfoSrv, userListSrv, deleteAllUsersSrv, dobSrv) {\r\n    // =============== TESTS\r\n    $scope.userCreateTest = 'userCreate controller is working correctly'\r\n    $scope.stateListSrvTest = stateListSrv.serviceTest\r\n    $scope.postUserInfoSrvTest = postUserInfoSrv.serviceTest\r\n    $scope.userServiceTest = userListSrv.userServiceTest\r\n    $scope.deleteAllUsersServiceTest = deleteAllUsersSrv.deleteAllUsersServiceTest\r\n    $scope.dobServiceTest = dobSrv.dobServiceTest\r\n\r\n    // =============== VARIABLES\r\n\r\n\r\n    // =============== GET STATES LIST\r\n    $scope.states = () => {\r\n        stateListSrv.getStatesList().then((response) => {\r\n            $scope.stateName = response.data\r\n        })\r\n    }\r\n    $scope.states()\r\n\r\n    // // =============== GET MONTHS LIST\r\n    // $scope.getmonths = () => {\r\n    //     $scope.months = dobSrv.monthsArr()\r\n    //     // console.log(JSON.stringify($scope.months))\r\n    // }\r\n    // $scope.getmonths()\r\n    // $scope.selectedMonth = null\r\n\r\n    // =============== CLEAR FORM\r\n    $scope.clearForm = () => document.getElementById(\"userCreateForm\").reset()\r\n\r\n    // =============== SUBMIT USER FORM DATA\r\n    $scope.userInfo = {}\r\n    $scope.submit = () => {\r\n        var sName = $scope.stateObj.name\r\n        var exists = 0\r\n        // console.log(`exists before function ${exists}`)\r\n        // ...................... checks to verify that the user doesn't already exist in the database.\r\n        var getUsers = () => {\r\n            userListSrv.getUserList().then((response) => {\r\n                $scope.users = response.data\r\n                // console.log(JSON.stringify($scope.users))\r\n                for (let i = 0; i < $scope.users.length; i++) {\r\n                    // console.log(\"what the fuck!\")\r\n                    // console.log(`db email ${$scope.users[i].email}`)\r\n                    if ($scope.users[i].email === $scope.userInfo.email && $scope.users[i].first_name === $scope.userInfo.firstName) {\r\n                        exists = 1\r\n                        break;\r\n                    }\r\n                }\r\n                // console.log(`exists inside after function ${exists}`)\r\n                for (let i = 0; i < $scope.stateName.length; i++) {\r\n                    if ($scope.stateName[i].name === sName) {\r\n                        $scope.userInfo.state_id = $scope.stateName[i].id\r\n                    }\r\n                }\r\n                if (exists === 0) {\r\n                    // console.log(`userInfo object that will be sent is ${JSON.stringify($scope.userInfo)}`)\r\n                    postUserInfoSrv.submitUserInfo($scope.userInfo)\r\n                    alert(`User has been created.`)\r\n                    $scope.clearForm()\r\n                }\r\n                else {\r\n                    alert(`User already exists!`)\r\n                }\r\n            })\r\n        }\r\n        getUsers()\r\n    }\r\n\r\n    // =============== DELETE ALL USERS\r\n    $scope.deleteUsers = function () { return deleteAllUsersSrv.deleteAllUsers() }\r\n\r\n\r\n\r\n    // no code below this line\r\n})","angular.module('app').controller('userManage', function ($scope, uiGridConstants, userListSrv, getUserColumnsSrv) {\r\n    // ===============  TESTS\r\n    $scope.userManageControllerTest = 'userManage Controller is ready to role!'\r\n    $scope.getUserColumnsSrvServiceTest = getUserColumnsSrv.getUserColumnsSrvServiceTest\r\n\r\n    // ===============  COLUMNS AND DATA\r\n    $scope.gridOptions = {\r\n        enableFiltering: true,\r\n        columnDefs: [],\r\n        onRegisterApi: function (gridApi) {\r\n            $scope.grid1Api = gridApi;\r\n        }\r\n    };\r\n    $scope.getUsers = () => {\r\n        userListSrv.getCustomUserList().then((response) => {\r\n            $scope.gridOptions.data = response.data\r\n        })\r\n    }\r\n    $scope.getUsers()\r\n\r\n})","","","","","","","","angular.module('app').service('deleteAllUsersSrv', function ($http) {\r\n    // =============== TESTS\r\n    this.deleteAllUsersServiceTest = 'the deleteAllUsersSrv is connected'\r\n\r\n    // =============== ENDPOINTS\r\n    this.deleteAllUsers = function() {\r\n        $http({\r\n            url: 'http://localhost:3000/api/user',\r\n            method: 'DELETE'\r\n        }).then(function (httpResponse) {\r\n            console.log('response:', JSON.stringify(httpResponse));\r\n        })\r\n    }\r\n\r\n})","angular.module('app').service('dobSrv', function ($http) {\r\n    // =============== TESTS\r\n    this.dobServiceTest = 'the dobSrv is connected'\r\n\r\n    // =============== LISTS\r\n    // ............... months\r\n    this.monthsArr = function () {\r\n        let monthObj = [{ name: 'January' }, { name: 'February' }, { name: 'March' }, { name: 'April' }, { name: 'May' }, { name: 'June' }, { name: 'July' }, { name: 'August' }, { name: 'September' }, { name: 'October' }, { name: 'November' }, { name: 'December' }]\r\n        return monthObj\r\n    }\r\n    // ............... days in the month\r\n\r\n    this.setDayOptions = (month, year) => {\r\n        var dayOptions = [1, 2, 3]\r\n        var leapYears = [1904, 1908, 1912, 1916, 1920, 1924, 1928, 1932, 1936, 1940, 1944, 1948, 1952, 1956, 1960, 1964, 1968, 1972, 1976, 1980, 1984, 1988, 1992, 1996, 2000, 2004, 2008, 2012, 2016, 2020]\r\n        if (month === 'April' || month === 'June' || month === 'September' || month === 'November') {\r\n            for (let i = 1; i < 31; i++) {\r\n                dayOptions.push(i)\r\n            }\r\n            return dayOptions\r\n        }\r\n        else if (month === 'February' && leapYears.indexOf(year) !== -1) {\r\n            for (let i = 1; i < 30; i++) {\r\n                dayOptions.push(i)\r\n            }\r\n            return dayOptions\r\n        }\r\n        else if (month === 'February' && leapYears.indexOf(year) === -1) {\r\n            for (let i = 1; i < 29; i++) {\r\n                dayOptions.push(i)\r\n            }\r\n            return dayOptions\r\n        }\r\n        else {\r\n            for (let i = 1; i < 32; i++) {\r\n                dayOptions.push(i)\r\n            }\r\n            return dayOptions\r\n        }\r\n    }\r\n    // ............... years available\r\n    this.yearsArr = [1980, 1981, 1982]\r\n    this.makeYearArray = (numberOfYears) => {\r\n        var d = new Date();\r\n        var n = d.getFullYear();\r\n        var p = n - numberOfYears\r\n        for (let i = p; i <= n; i++) {\r\n            yearsArr.push(i)\r\n        }\r\n        return yearsArr\r\n    }\r\n\r\n    // no code below this line\r\n})","angular.module('app').service('getUserColumnsSrv', function($http){\r\n    // =============== TESTS\r\n    this.getUserColumnsSrvServiceTest = 'the getUserColumnsSrv is connected'\r\n\r\n    // =============== ENDPOINTS\r\n    this.getColumnList = () => ( $http.get('http://localhost:3000/api/user/columns') )\r\n})\r\n","angular.module('app').service('postUserInfoSrv', function ($http) {\r\n    // =============== TESTS\r\n    this.serviceTest = 'the postUserInfoSrv is connected'\r\n\r\n    // =============== ENDPOINTS\r\n    this.submitUserInfo = (data) => {\r\n        // console.log(`clicked submit and got ${JSON.stringify(data)}`)\r\n        $http({\r\n            url: 'http://localhost:3000/api/user',\r\n            method: 'POST',\r\n            data: data\r\n        }).then(function (httpResponse) {\r\n            console.log('response:', JSON.stringify(httpResponse));\r\n        })\r\n    }\r\n\r\n})","angular.module('app').service('stateListSrv', function($http){\r\n    // =============== TESTS\r\n    this.serviceTest = 'the stateListSrv is connected'\r\n\r\n    // =============== ENDPOINTS\r\n    this.getStatesList = () => ( $http.get('http://localhost:3000/api/states') )\r\n})","angular.module('app').service('userListSrv', function($http){\r\n    // =============== TESTS\r\n    this.userServiceTest = 'the userListSrv is connected'\r\n\r\n    // =============== ENDPOINTS\r\n    this.getUserList = () => ( $http.get('http://localhost:3000/api/user') )\r\n    this.getCustomUserList = () => ( $http.get('http://localhost:3000/api/users') )\r\n})"]}