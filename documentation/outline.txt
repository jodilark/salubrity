What problem does this app solve?
	People are always asked about their medical history when visiting healthcare facilities. It would be nice to not only have that information on hand as a client, but to be able to receive that information as the healthcare provider through an easy to read method.
	
How does it solve those problems?
	allows a person to have quick access to medical records and the ability for providers to perform/track new medical tests
	
Who is your target user?
	healthcare providers
	general public
	
How much experience do they have with technology?
	intermediate level
		standard web browsing, basic data entry.

Possible methods of entry
	voice command
	scanning license
	social media?

//Lookup page
Ability to see a list of all user/patient
	searchable columns
	filters on columns
	
Custom filters

Do's on patients
	add to run
	see all runs

Do's on users (only as admin)

Sharable Do's
	Edit information (simple)
	
	
	
when attaching to fitbit api just use https ... no need for cert.
mvp feature set
	user can login
	user can logout
	if the user leaves the page, or refreshes, session is maintained
	if user is not logged in, they cannot see any personalized information and is restricted to the landing page.
	the landing page explains what the app is about and how to use it
	admin can perform crud operations on users
	admin can perform crud operations on tests
	users can search through a list of users (including admin users) as long as they have permission to do so
	user can search every piece of data using a global search
	users can sort the user table by one or more column headers
	users can filter the user table by one or more column headers
	users can add keywords to each record
	user can access the app and have a good user experience on mobile, tablet, and desktop
	users can be flagged as admins
	users can select a user from the table to see more detailed information about that user
	needs to be user messageing when the user performs crud actions
	basic styling
	
add ons
fit bit tracking and reporting from user's fitbit device
d3 graphs on the landing page (once logged in) that will give stats about users and tests
barcode scanner to add test supplies used for test
animations
parrellax effects
ability to email
ability to add attachements to email.
ability to add a user by using a camera to decode their driver's license
spreadsheet creation, export
system guided tutorial
testing
	
Controllers
loginCtrl
	EP:
		POST authkey
landingPagePublicCtrl
	noDB
landingPageUserCtrl
	EP:
		GET global search
		GET user stats by id
landingPageHCPCtrl
	EP:
		GET test stats *
		GET test by user id
		GET test by test id
testCreateCtrl
	EP:
		GET test by id
		GET patient id's
		GET tags
		GET test type's
		GET protocals
		GET operators
		GET instruments
		POST JSON blob
		{
			"serialNumber": "varchar"
			, "sampleId": int
			, "patientId": int
			, "logNumber": "varchar"
			, "tags": array "varchar"
			, "testTypeId": int
			, "protocalId": int
			, "operatorId": int
			, "instrumentId": int
		}
testManageCtrl
	EP:
		GET * tests
		GET test by id
		DELETE test by id
		PUT JSON blob
		{
			"tags": array "varchar" 
		}
		GET default column list by user
		GET user by id
		GET default column list
testDetailsCtrl
	EP:
		GET test by id
userCreateCtrl
	EP:
		GET roles
		GET user by id
		GET medical history list
		GET country list
		GET state list
		GET zipcode list
		POST JSON blob
		{
			"firstName": "varchar"
			, "lastName": "varchar"
			, "dob": date
			, "email": "varchar"
			, "phone": int
			, "address1": "varchar"
			, "address2": "varchar"
			, "city": "varchar"
			, "state": selection "varchar"
			, "country": selection "varchar"
			, "zip": selection int
			, "weight": int
			, "height": int
			, "fitbitId: "varchar"
			, "role": selection "varchar"
			, "familyRelations": {
				"fatherFirstName": "varchar"
				, "fatherLastName": "varchar"
				, "fatherDob": date
				, "motherFirstName": "varchar"
				, "motherMaidenName": "varchar"
				, "motherDob": date
				, "siblings": [{
						"gender": selection "varchar"
						, "firstName": "varchar"
						, "lastName": "varchar"
						, "dob": date
					}
				]
				, "children": [{
						"gender": selection "varchar"
						, "firstName": "varchar"
						, "lastName": "varchar"
						, "dob": date
					}
				]
			}
			, "hideFromPublic": boolean (default to false)
			, "medicalHistory": [{
					"condition": "varchar"
					, "hasHistory": boolean (default to false)
					, "lastRecord": date
				}
			]
		}
userManageCtrl
settingsCtrl
userStatsCtrl
errorDir (directive)
warningDir (directive)
successDir (directive)
headerDir (directive)
contactCtrl
globalSearchCtrl
progressBarDir (directive)
